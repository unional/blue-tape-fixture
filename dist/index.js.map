{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";AAAA,IAAO,IAAI,WAAW,WAAW,CAAC,CAAC;AACnC,qBAAqB,MAAM,CAAC,CAAA;AAY5B,iBAAgC,eAAuB;IACrD,eAAe,MAAgD;QAC7D,MAAM,CAAC,UACL,KAAa,EACb,WAAmB,EACnB,EAAuC;YAEvC,IAAM,WAAW,GAAG,WAAI,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;YACvD,MAAM,CAAC,MAAM,CAAI,KAAK,mBAAc,WAAW,MAAG,EAAE,UAAA,CAAC;gBACnD,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,MAAM,GAAQ,KAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,MAAM,CAAC,MAAqB,CAAC;AAC/B,CAAC;AAjBD;yBAiBC,CAAA","sourcesContent":["import test = require('blue-tape');\nimport { join } from 'path';\n\nexport interface FixtureTest {\n  (name: string, fixtureName: string, cb: (t: test.Test, path: string) => any): test.Test;\n  only(name: string, fixtureName: string, cb: (t: test.Test, path: string) => any): test.Test;\n  skip(name: string, fixtureName: string, cb: (t: test.Test, path: string) => any): test.Test;\n}\n\n/**\n * Create fixture test with the specified fixture base path.\n * @param fixtureBasePath Fixture base path. If using relative path, starts at the project root.\n */\nexport default function fixture(fixtureBasePath: string): FixtureTest {\n  function curry(testfn: (name: string, cb: test.TestCase) => any): any {\n    return (\n      title: string,\n      fixtureName: string,\n      cb: (t: test.Test, path: string) => any\n    ) => {\n      const fixturePath = join(fixtureBasePath, fixtureName);\n      return testfn(`${title} (fixture: ${fixtureName})`, t => {\n        return cb(t, fixturePath);\n      });\n    };\n  }\n  let result: any = curry(test);\n  result.only = curry(test.only);\n  result.skip = curry(test.skip);\n  return result as FixtureTest;\n}\n"]}